def run(cmd)
  puts "* running: #{cmd}"
  system cmd
  raise "ERROR running command" unless $? == 0
end

def setup_rails_app dir
  dir =~ /rails-([^-]+)-(.*)/
  version, flavor = $1, $2
  run "./generate_test_directory #{version} #{flavor}"
  bundler_cache = File.expand_path("bundler_cache")
  Dir.chdir dir do
    File.open("Gemfile", "w") do |gemfile|
      gemfile.write <<-GEM
        source :gemcutter
        gem "rails", "=#{version}"
        gem "loofah", :path => File.join(File.dirname(__FILE__),"../../../loofah")
        gem "loofah-activerecord", :path => File.join(File.dirname(__FILE__),"../..")
        gem "sqlite3-ruby", :require => "sqlite3"
      GEM
    end
    run "bundle install --path=#{bundler_cache}"
  end
end

def test_rails_app dir
  @results ||= {}
  Dir.chdir(dir) do
    ENV['RAILS_ENV'] = "test"
    FileUtils.mkdir_p "log"
    begin
      run "touch db/test.sqlite3" # db:create doesn't exist before rails 2.0
      run "bundle exec rake db:migrate test:units --trace"
    rescue Object
      @results[dir] = "FAIL"
    else
      @results[dir] = "SUCCESS"
    end
  end
end

def print_results
  puts "----- RESULTS -----"
  @results.keys.sort.each do |key|
    puts "* #{key}: #{@results[key]}"
  end
end

Dir["#{File.dirname(__FILE__)}/rails-*"].sort.each do |fqdir|
  dir = File.basename fqdir
  desc "test #{dir}"
  task "test:#{dir}" do
    Dir.chdir(File.dirname(__FILE__)) do
      setup_rails_app dir
      test_rails_app dir
    end
  end
end

namespace :test do
  desc "run tests across various versions of Rails"
  task :rails do
    Dir["#{File.dirname(__FILE__)}/rails-*"].sort.reverse.each do |fqdir|
      dir = File.basename fqdir
      Rake::Task["test:#{dir}"].invoke
    end
    print_results
  end
end
